generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Profile {
  id          String        @id @db.Uuid
  email       String?
  isDeleted   Boolean?      @default(false)
  Partogramme Partogramme[]
  userInfo    userInfo[]
}

model userInfo {
  id          String   @id @db.Uuid
  lastName    String
  firstName   String
  role        Role     @default(NURSE)
  isDeleted   Boolean? @default(false)
  profileId   String   @db.Uuid
  hospitalId  String  @db.Uuid
  refDoctorId String   @db.Uuid
  profile     Profile  @relation(fields: [profileId], references: [id])
  hospital    hospital? @relation(fields: [hospitalId], references: [id])
}

model hospital {
  id        String   @id @db.Uuid
  name      String
  isDeleted Boolean? @default(false)
  city      String
  partogramme Partogramme[]
  userInfo    userInfo[]
}

model Partogramme {
  id                           String                         @id @db.Uuid
  noFile                       BigInt
  patientLastName              String?
  patientFirstName             String?
  admissionDateTime            DateTime                       @db.Timestamptz(6)
  workStartDateTime            DateTime?                      @db.Timestamptz(6)
  commentary                   String
  state                        PartogrammeState               @default(ADMITTED)
  isDeleted                    Boolean?                       @default(false)
  nurseId                      String                         @db.Uuid
  hospitalId                   String                        @db.Uuid
  refDoctorId                  String                        @db.Uuid
  BabyDescent                  BabyDescent[]
  BabyHeartFrequency           BabyHeartFrequency[]
  Comment                      Comment[]
  Dilation                     Dilation[]
  MotherContractionDuration    MotherContractionDuration[]
  MotherContractionsFrequency  MotherContractionsFrequency[]
  MotherDiastolicBloodPressure MotherDiastolicBloodPressure[]
  MotherHeartFrequency         MotherHeartFrequency[]
  MotherSystolicBloodPressure  MotherSystolicBloodPressure[]
  MotherTemperature            MotherTemperature[]
  nurse                        Profile                        @relation(fields: [nurseId], references: [id])
  hospital                     hospital                       @relation(fields: [hospitalId], references: [id])
  amnioticLiquid               amnioticLiquid[]
}

model BabyHeartFrequency {
  id            String      @id @db.Uuid
  value         Float       @default(0)
  Rank          Decimal?    @db.Decimal
  created_at    DateTime    @db.Timestamptz(6)
  isDeleted     Boolean?    @default(false)
  partogrammeId String      @db.Uuid
  partogramme   Partogramme @relation(fields: [partogrammeId], references: [id])
}

model amnioticLiquid {
  id            String      @id @db.Uuid
  value         LiquidState @default(INTACT)
  Rank          Decimal?    @db.Decimal
  created_at    DateTime    @db.Timestamptz(6)
  isDeleted     Boolean?    @default(false)
  partogrammeId String      @db.Uuid
  partogramme   Partogramme @relation(fields: [partogrammeId], references: [id])
}

model Dilation {
  id            String      @id @db.Uuid
  value         Float       @default(0)
  Rank          Decimal?    @db.Decimal
  created_at    DateTime    @db.Timestamptz(6)
  isDeleted     Boolean?    @default(false)
  partogrammeId String      @db.Uuid
  partogramme   Partogramme @relation(fields: [partogrammeId], references: [id])
}

model BabyDescent {
  id            String      @id @db.Uuid
  value         Float       @default(0)
  Rank          Decimal?    @db.Decimal
  created_at    DateTime    @db.Timestamptz(6)
  isDeleted     Boolean?    @default(false)
  partogrammeId String      @db.Uuid
  partogramme   Partogramme @relation(fields: [partogrammeId], references: [id])
}

model MotherHeartFrequency {
  id            String      @id @db.Uuid
  value         Float       @default(0)
  Rank          Decimal?    @db.Decimal
  created_at    DateTime    @db.Timestamptz(6)
  isDeleted     Boolean?    @default(false)
  partogrammeId String      @db.Uuid
  partogramme   Partogramme @relation(fields: [partogrammeId], references: [id])
}

model MotherSystolicBloodPressure {
  id            String      @id @db.Uuid
  value         Float       @default(0)
  Rank          Decimal?    @db.Decimal
  created_at    DateTime    @db.Timestamptz(6)
  isDeleted     Boolean?    @default(false)
  partogrammeId String      @db.Uuid
  partogramme   Partogramme @relation(fields: [partogrammeId], references: [id])
}

model MotherDiastolicBloodPressure {
  id            String      @id @db.Uuid
  value         Float       @default(0)
  Rank          Decimal?    @db.Decimal
  created_at    DateTime    @db.Timestamptz(6)
  isDeleted     Boolean?    @default(false)
  partogrammeId String      @db.Uuid
  partogramme   Partogramme @relation(fields: [partogrammeId], references: [id])
}

model MotherTemperature {
  id            String      @id @db.Uuid
  value         Float       @default(0)
  Rank          Decimal?    @db.Decimal
  created_at    DateTime    @db.Timestamptz(6)
  isDeleted     Boolean?    @default(false)
  partogrammeId String      @db.Uuid
  partogramme   Partogramme @relation(fields: [partogrammeId], references: [id])
}

model MotherContractionsFrequency {
  id            String      @id @db.Uuid
  value         Float       @default(0)
  Rank          Decimal?    @db.Decimal
  created_at    DateTime    @db.Timestamptz(6)
  isDeleted     Boolean?    @default(false)
  partogrammeId String      @db.Uuid
  partogramme   Partogramme @relation(fields: [partogrammeId], references: [id])
}

model MotherContractionDuration {
  id            String      @id @db.Uuid
  value         Float       @default(0)
  Rank          Decimal?    @db.Decimal
  created_at    DateTime    @db.Timestamptz(6)
  isDeleted     Boolean     @default(false)
  partogrammeId String      @db.Uuid
  partogramme   Partogramme @relation(fields: [partogrammeId], references: [id])
}

model Comment {
  id            String      @id @db.Uuid
  value         String
  created_at    DateTime    @db.Timestamptz(6)
  isDeleted     Boolean     @default(false)
  partogrammeId String      @db.Uuid
  partogramme   Partogramme @relation(fields: [partogrammeId], references: [id])
}

enum Role {
  NURSE
  DOCTOR
}

enum PartogrammeState {
  ADMITTED
  IN_PROGRESS
  TRANSFERRED
  WORK_FINISHED
}

enum LiquidState {
  NONE
  INTACT
  CLAIR
  MECONIAL
  SANG
  PUREE_DE_POIS
}
